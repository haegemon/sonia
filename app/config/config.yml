imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @AntBundle/Resources/config/admin.yml }
framework:
    #esi:             ~
    translator: { fallback: ru }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:         ~
    fragments:       ~

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%

# Assetic Configuration
assetic:
    debug:          %kernel.debug%
    use_controller: false
    bundles:        ['AntBundle']
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar

# Doctrine Configuration
doctrine:
    dbal:
        driver:   %database_driver%
        host:     %database_host%
        port:     %database_port%
        dbname:   %database_name%
        user:     %database_user%
        password: %database_password%
        charset:  UTF8
        types: #this is about this line and line below
                    json:     Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: %kernel.root_dir%/data/data.db3
        # path:     %database_path%

    orm:
        auto_generate_proxy_classes: %kernel.debug%
        auto_mapping: true


# Swiftmailer Configuration
swiftmailer:
    transport: %mailer_transport%
    host:      %mailer_host%
    username:  %mailer_user%
    password:  %mailer_password%
    spool:     { type: memory }



#Sonata Block

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.admin_head:
            contexts:   [admin]

sonata_admin:
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            STAFF:    [EDIT, LIST]
            ADMIN:    [MASTER]
            EDITOR:   [EDIT, LIST, CREATE, DELETE]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_head

    templates:
        layout:  AntBundle::standart_layout.html.twig
        ajax:    AntBundle::ajax_layout.html.twig
        list:    AntBundle:CRUD:list.html.twig
        show:    AntBundle:CRUD:show.html.twig
        edit:    AntBundle:CRUD:edit.html.twig
        history: AntBundle:CRUD:history.html.twig
        preview: AntBundle:CRUD:preview.html.twig
        delete:  AntBundle:CRUD:delete.html.twig
        batch:   AntBundle:CRUD:list__batch.html.twig
        acl:     AntBundle:CRUD:acl.html.twig
        action:  AntBundle:CRUD:action.html.twig
        select:  AntBundle:CRUD:list__select.html.twig
        dashboard:           AntBundle:Core:dashboard.html.twig
        search:              AntBundle:Core:search.html.twig
        batch_confirmation:  AntBundle:CRUD:batch_confirmation.html.twig
        inner_list_row:      AntBundle:CRUD:list_inner_row.html.twig
        base_list_field:     AntBundle:CRUD:base_list_field.html.twig
        base_list_field:     AntBundle:CRUD:base_list_field.html.twig
        list_block:          AntBundle:Block:block_admin_list.html.twig
        user_block:          AntBundle:Core:user_block.html.twig
        pager_links:         AntBundle:Pager:links.html.twig
        pager_results:       AntBundle:Pager:results.html.twig
        history_revision_timestamp:  AntBundle:CRUD:history_revision_timestamp.html.twig
        short_object_description:    AntBundle:Helper:short-object-description.html.twig
        search_result_block: AntBundle:Block:block_search_result.html.twig

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Ant\NewUserBundle\Entity\User


stof_doctrine_extensions:
    default_locale: en
    translation_fallback: true
    orm:
        default:
            sluggable: true
            tree: true
            timestampable: true
            softdeleteable: true


knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: AntBundle::knp_menu.html.twig
    templating: false # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default



knp_paginator:
    page_range: 10                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: AntBundle::paginator_sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template


liip_imagine:
    filter_sets:
        admin_thumb:
            filters:
                thumbnail: { size: [50, 50], mode: outbound } # Transforms 50x40 to 32x32, while cropping the width
        admin_thumb_l:
            filters:
                thumbnail: { size: [100, 100], mode: outbound } # Transforms 50x40 to 32x32, while cropping the width
        my_thumb_out:
            filters:
                thumbnail: { size: [250, 200], mode: outbound } # Transforms 50x40 to 32x32, while cropping the width
        carousel:
            filters:
                thumbnail: { size: [1920, 300], mode: outbound } # Transforms 50x40 to 32x32, while cropping the width
        logo:
            filters:
                thumbnail: { heighten: 50 }

        portfolio_xl:
            filters:
                thumbnail: { size: [700, 700], mode: inset } # Transforms 50x40 to 32x26, no cropping
        my_heighten:
            filters:
                relative_resize: { heighten: 60 } # Transforms 50x40 to 75x60
        my_widen:
             filters:
                relative_resize: { widen: 32 }    # Transforms 50x40 to 32x26
        my_increase:
             filters:
                relative_resize: { increase: 10 } # Transforms 50x40 to 60x50
        my_widen:
             filters:
                relative_resize: { scale: 2.5 }   # Transforms 50x40 to 125x100